# 📦 Guide d'installation Git pour Zenu

Ce guide vous explique comment mettre en place Git pour votre projet Zenu.

## 🎯 Installation de Git

### Windows
1. Téléchargez Git : https://git-scm.com/download/win
2. Installez avec les options par défaut
3. Ouvrez "Git Bash"

### Mac
```bash
# Installer avec Homebrew
brew install git
```

### Linux
```bash
# Ubuntu/Debian
sudo apt-get install git

# Fedora
sudo dnf install git
```

## 🚀 Configuration initiale

### 1. Configurer votre identité
```bash
git config --global user.name "Votre Nom"
git config --global user.email "votre@email.com"
```

### 2. Vérifier la configuration
```bash
git config --list
```

## 📁 Initialiser le projet

### 1. Aller dans votre dossier Zenu
```bash
cd /chemin/vers/votre/www
```

### 2. Initialiser Git
```bash
git init
```

### 3. Ajouter les fichiers
```bash
# Créer le .gitignore d'abord (voir le fichier .gitignore fourni)

# Copier config.php en config.example.php
cp config.php config.example.php

# Éditer config.example.php pour retirer vos vrais identifiants
# puis ajouter tous les fichiers
git add .
```

### 4. Premier commit
```bash
git commit -m "Initial commit - Projet Zenu"
```

## 🌐 Connecter à GitHub

### 1. Créer un repository sur GitHub
- Allez sur https://github.com
- Cliquez sur "New repository"
- Nom : `zenu`
- Description : "Outils simples et zen"
- Choisissez Public ou Private
- NE PAS initialiser avec README (vous en avez déjà un)
- Cliquez "Create repository"

### 2. Connecter votre projet local
```bash
# Remplacez 'votre-username' par votre nom d'utilisateur GitHub
git remote add origin https://github.com/votre-username/zenu.git
git branch -M main
git push -u origin main
```

### 3. Entrer vos identifiants GitHub
- Username : votre nom d'utilisateur GitHub
- Password : créez un Personal Access Token sur GitHub :
  1. GitHub → Settings → Developer settings → Personal access tokens → Tokens (classic)
  2. Generate new token
  3. Cochez "repo"
  4. Copiez le token et utilisez-le comme mot de passe

## 🔄 Workflow quotidien

### Voir les modifications
```bash
git status
```

### Ajouter des modifications
```bash
# Ajouter un fichier spécifique
git add nom-du-fichier.php

# Ajouter tous les fichiers modifiés
git add .
```

### Créer un commit
```bash
git commit -m "Description de vos modifications"
```

### Envoyer sur GitHub
```bash
git push
```

### Récupérer les modifications (si vous travaillez depuis plusieurs machines)
```bash
git pull
```

## 📝 Messages de commit recommandés

```bash
# Nouvelles fonctionnalités
git commit -m "feat: ajout du gestionnaire d'images"

# Corrections de bugs
git commit -m "fix: correction de l'erreur de connexion"

# Modifications de style/design
git commit -m "style: amélioration du design de la page d'accueil"

# Documentation
git commit -m "docs: mise à jour du README"

# Refactoring
git commit -m "refactor: restructuration du code de dashboard.php"
```

## ⚠️ Important : Sécurité

### Ne JAMAIS commiter :
- ❌ `config.php` (contient vos mots de passe)
- ❌ Dossier `uploads/` (images des utilisateurs)
- ❌ Fichiers `.log`
- ❌ Dossier `.env`

C'est pour ça qu'on a le `.gitignore` !

### Vérifier avant de push :
```bash
git status
git diff
```

## 🆘 Commandes utiles

### Annuler des modifications non commitées
```bash
git checkout -- nom-du-fichier.php
```

### Voir l'historique
```bash
git log
git log --oneline
```

### Créer une branche (pour tester des fonctionnalités)
```bash
git checkout -b nouvelle-fonctionnalite
# Faire vos modifications
git add .
git commit -m "Test de nouvelle fonctionnalité"
git checkout main
git merge nouvelle-fonctionnalite
```

### Revenir à un commit précédent
```bash
# Voir l'historique
git log --oneline

# Revenir temporairement
git checkout [hash-du-commit]

# Revenir définitivement (attention !)
git reset --hard [hash-du-commit]
```

## 🎓 Ressources

- [Documentation Git officielle](https://git-scm.com/doc)
- [GitHub Guides](https://guides.github.com/)
- [Git Cheat Sheet](https://education.github.com/git-cheat-sheet-education.pdf)

---

**Besoin d'aide ?** N'hésitez pas à consulter la documentation ou à demander !

🚀 Bon développement !